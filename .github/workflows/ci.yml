name: CI Pipeline

on:
  push:
    branches: ['**']

env:
  DATABASE_USER: ${{ secrets.DATABASE_USER }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  DATABASE_HOST_PORT: ${{ secrets.DATABASE_HOST_PORT }}

jobs:
  push-checks:
    name: Code checks (Spotless, Sonatype, JaCoCo, Unit test)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Init fail flag
        run: echo 0 > failed.flag

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run Lint (Spotless)
        run: |
          mkdir -p target
          mvn spotless:check -Dprofile=prod | tee target/spotless-report.txt || echo 1 > failed.flag

      - name: Upload Spotless Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: spotless-report
          path: app/target/spotless-report.txt

      - name: Run SCA (Sonatype)
        run: |
          mvn org.sonatype.ossindex.maven:ossindex-maven-plugin:audit -Dprofile=prod \
            | tee target/sonatype-report.txt || echo 1 > failed.flag

      - name: Upload SonaType Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sonatype-report
          path: app/target/sonatype-report.txt

      - name: Run Unit Tests + JaCoCo (Code Coverage)
        run: mvn clean verify -Dprofile=prod || echo 1 > failed.flag

      - name: Upload JaCoCo Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: app/target/site/jacoco

      - name: Fail the job if any step failed
        run: |
          if [ "$(cat failed.flag)" = "1" ]; then
            echo "At least one check failed. Failing job."
            exit 1
          fi