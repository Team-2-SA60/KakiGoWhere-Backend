name: CD Pipeline

on:
  push:
    branches: [ "**" ]

env:
  IMAGE_NAME: kakigowhere-backend:latest

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build Docker Image
      working-directory: app
      run: docker build -f ../docker/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }} .

    - name: Push Docker Image
      working-directory: app
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform
        run: |
          terraform apply -auto-approve \
            -var="do_token=${{ secrets.DO_PAT }}" \
            -var="ssh_key_fingerprint=${{ secrets.DO_SSH }}"

      - name: Get Droplet IP
        working-directory: terraform
        id: droplet_ip
        run: |
          ip=$(terraform output -raw droplet_ip)
          echo "DROPLET_IP=$ip" >> $GITHUB_OUTPUT

      - name: Add SSH host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ steps.droplet_ip.outputs.DROPLET_IP }} > ~/.ssh/known_hosts
          
      - name: Write private SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

      - name: Setup Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Make Ansible Inventory
        working-directory: ansible
        run: |
          echo "[app]" > inventory.ini
          echo "${{ steps.droplet_ip.outputs.DROPLET_IP }} ansible_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa" >> inventory.ini

      - name: Run Ansible Playbook
        working-directory: ansible
        run: |
          ansible-playbook -i inventory.ini playbook.yml \
            --extra-vars "db_user=${{ secrets.MYSQL_USER }} \
                          db_pass=${{ secrets.MYSQL_PASS }} \
                          db_root_pass=${{ secrets.MYSQL_ROOT_PASSWORD }} \
                          docker_image=${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}"